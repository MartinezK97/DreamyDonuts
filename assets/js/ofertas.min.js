// window.addEventListener("load", function () {
//     const content = document.getElementById("content");
//     const slider = document.getElementById("slider");
//     const bodyBG = document.querySelector(".bodyBG");

//     function adjustScroll() {
//         slider.scrollTop = slider.scrollHeight;
//         content.scrollTop = 0;
//     }

//     adjustScroll();
//     window.addEventListener("resize", adjustScroll);

//     let isScrolling = false;
//     content.addEventListener("scroll", function () {
//         if (!isScrolling) {
//             isScrolling = true;
//             requestAnimationFrame(() => {
//                 const scrollTop = content.scrollTop;
//                 const contentHeight = content.offsetHeight;
//                 const contentScrollHeight = content.scrollHeight;
//                 const sliderHeight = slider.offsetHeight;
//                 const sliderScrollHeight = slider.scrollHeight;
//                 const bodyWidth = bodyBG.offsetWidth;
//                 const bodyScrollWidth = bodyBG.scrollWidth;

//                 const maxContentScroll = Math.max(contentScrollHeight - contentHeight, 1);
//                 const maxSliderScroll = Math.max(sliderScrollHeight - sliderHeight, 1);

//                 const sliderScrollTop = Math.round(maxSliderScroll - (scrollTop * maxSliderScroll / maxContentScroll));
//                 const bodyScrollLeft = Math.round(scrollTop * Math.max(bodyScrollWidth - bodyWidth, 1) / maxContentScroll);

//                 if (slider.scrollTop !== sliderScrollTop) {
//                     slider.scrollTop = sliderScrollTop;
//                 }
//                 if (bodyBG.scrollLeft !== bodyScrollLeft) {
//                     bodyBG.scrollLeft = bodyScrollLeft;
//                 }

//                 isScrolling = false;
//             });
//         }
//     });
// })


// window.addEventListener("load", function () {
//     const content = document.getElementById("content");
//     const slider = document.getElementById("slider");
//     const bodyBG = document.querySelector(".bodyBG");
//     const sections = document.querySelectorAll("#content > article"); // Todas las secciones de contenido

//     // Configuración inicial
//     function initialize() {
//         const viewportHeight = window.innerHeight;

//         // Asegurar altura completa para las secciones
//         sections.forEach(section => {
//             section.style.minHeight = `${viewportHeight}px`;
//         });

//         // Posicionamiento inicial
//         slider.scrollTop = slider.scrollHeight;
//         bodyBG.scrollLeft = 0;
//     }

//     initialize();
//     window.addEventListener("resize", initialize);

//     // Nueva lógica de scroll con detección de secciones
//     let isAnimating = false;
//     let currentSection = 0;

//     function handleScroll() {
//         if (isAnimating) return;
//         isAnimating = true;

//         const newSection = Math.round(content.scrollTop / window.innerHeight);

//         // Ajustar solo si cambia la sección
//         if (newSection !== currentSection) {
//             currentSection = Math.min(Math.max(newSection, 0), sections.length - 1);

//             // Calcular posiciones
//             const sliderHeight = slider.scrollHeight;
//             const sliderStep = sliderHeight / sections.length;
//             const targetSliderPos = sliderHeight - (currentSection * sliderStep) - sliderStep;

//             const bgWidth = bodyBG.scrollWidth;
//             const bgStep = bgWidth / (sections.length - 1);
//             const targetBgPos = currentSection * bgStep;

//             // Animación suave
//             slider.scrollTo({
//                 top: targetSliderPos,
//                 behavior: "smooth"
//             });

//             bodyBG.scrollTo({
//                 left: targetBgPos,
//                 behavior: "smooth"
//             });
//         }

//         isAnimating = false;
//     }

//     // Configurar scroll snapping
//     content.style.scrollSnapType = "y mandatory";
//     sections.forEach(section => {
//         section.style.scrollSnapAlign = "start";
//     });

//     // Event listeners mejorados
//     let isScrolling = false;
//     content.addEventListener("scroll", () => {
//         if (!isScrolling) {
//             isScrolling = true;
//             requestAnimationFrame(() => {
//                 handleScroll();
//                 isScrolling = false;
//             });
//         }
//     });

//     // Soporte para navegación con teclado
//     document.addEventListener("keydown", (e) => {
//         if (e.key === "ArrowDown") {
//             currentSection = Math.min(currentSection + 1, sections.length - 1);
//             content.scrollTo(0, currentSection * window.innerHeight);
//         } else if (e.key === "ArrowUp") {
//             currentSection = Math.max(currentSection - 1, 0);
//             content.scrollTo(0, currentSection * window.innerHeight);
//         }
//     });
// });

window.addEventListener("load", function () {
    const content = document.getElementById("content");
    const slider = document.getElementById("slider");
    const bodyBG = document.querySelector(".bodyBG");
    const sections = document.querySelectorAll("#content > article");

    // Obtener altura del header desde CSS
    const headerHeight = parseFloat(getComputedStyle(document.documentElement)
        .getPropertyValue("--header-height")) * 16 || 0;

    console.log("El height del header es: ", headerHeight)
    // Calcular altura disponible para las secciones
    let sectionHeight = window.innerHeight - headerHeight;

    function initialize() {
        // Actualizar altura de sección al cambiar tamaño
        sectionHeight = window.innerHeight - headerHeight;

        // Configurar altura de las secciones
        sections.forEach(section => {
            section.style.minHeight = `${sectionHeight}px`;
        });

        // Posicionamiento inicial
        slider.scrollTop = slider.scrollHeight;
        content.scrollTop = 0;
        bodyBG.scrollLeft = 0;
    }

    initialize();
    window.addEventListener("resize", initialize);

    // Lógica de scroll mejorada
    let isAnimating = false;
    let currentSection = 0;

    function handleScroll() {
        if (isAnimating) return;
        isAnimating = true;

        const scrollPosition = content.scrollTop;
        const newSection = Math.round(scrollPosition / sectionHeight);

        if (newSection !== currentSection) {
            currentSection = Math.min(
                Math.max(newSection, 0),
                sections.length - 1
            );

            // Calcular posiciones relativas
            const sliderScroll = slider.scrollHeight -
                ((currentSection + 1) * (slider.scrollHeight / sections.length));

            const bgScroll = (bodyBG.scrollWidth - window.innerWidth) *
                (currentSection / (sections.length - 1));

            // Animaciones sincronizadas
            slider.scrollTo({
                top: sliderScroll,
                behavior: "smooth"
            });

            bodyBG.scrollTo({
                left: bgScroll,
                behavior: "smooth"
            });
        }
        isAnimating = false;
    }

    // Configurar scroll snapping con offset para el header
    content.style.scrollSnapType = `y mandatory`;
    // content.style.scrollPaddingTop = `${headerHeight}px`;

    sections.forEach(section => {
        section.style.scrollSnapAlign = "start";
    });

    // Gestión de eventos de scroll
    let isScrolling = false;
    content.addEventListener("scroll", () => {
        if (!isScrolling) {
            isScrolling = true;
            requestAnimationFrame(() => {
                handleScroll();
                isScrolling = false;
            });
        }
    });

    // Navegación con teclado mejorada
    document.addEventListener("keydown", (e) => {
        if (["ArrowDown", "ArrowUp", " "].includes(e.key)) {
            e.preventDefault();
        }

        if (e.key === "ArrowDown" || e.key === " ") {
            const nextSection = Math.min(currentSection + 1, sections.length - 1);
            content.scrollTo(0, nextSection * sectionHeight);
        } else if (e.key === "ArrowUp") {
            const prevSection = Math.max(currentSection - 1, 0);
            content.scrollTo(0, prevSection * sectionHeight);
        }
    });

    // Soporte para rueda del mouse
    let wheelTimeout;
    content.addEventListener("wheel", (e) => {
        clearTimeout(wheelTimeout);
        wheelTimeout = setTimeout(() => {
            const delta = Math.sign(e.deltaY);
            const targetSection = Math.min(
                Math.max(currentSection + delta, 0),
                sections.length - 1
            );
            content.scrollTo(0, targetSection * sectionHeight);
        }, 100);
    }, { passive: true });
});